-- ======= Depend√™ncias =======
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Player = Players.LocalPlayer

-- ======= Config =======
local ConfigFile = "SlayerHubConfig.json"
local Config = {
    AutoFarmFruit = false,
    AutoStoreFruits = false,
    WebhookSpawnEnabled = false,
    WebhookStoreEnabled = false,
    WebhookSpawnURL = "",
    WebhookStoreURL = ""
}

-- ======= Salvar / Carregar =======
local function SaveConfig()
    if writefile then
        writefile(ConfigFile, HttpService:JSONEncode(Config))
    end
end

local function LoadConfig()
    if readfile and isfile(ConfigFile) then
        local ok, data = pcall(function()
            return HttpService:JSONDecode(readfile(ConfigFile))
        end)
        if ok and data then
            for k,v in pairs(data) do
                Config[k] = v
            end
        end
    end
end
LoadConfig()

-- ======= Raridades =======
local Rarities = {
    ["Mythical"] = {"Gravity", "Mamute", "T-Rex", "Massa", "Shadow","Venom", "Gas", "Control", "Spirit", "Leopard", "Yeti", "Kitsune", "Drag√£o"},
    ["Legendary"] = {"Quake", "Buddha", "Love", "Creation", "Spider","Sound", "Phoenix", "Portal", "Lightning", "Pain","Nevasca"},
    ["Epic"] = {"Luz", "Rubber", "Ghost", "Magma"},
    ["Rare"] = {"Flame", "Ice", "Areia", "Dark", "Eagle", "Diamante"},
    ["Common"] = {"Rocket", "Spin", "Blade", "Spring", "Bomb", "Smoke", "Spike"}
}

local function GetRarity(fruitName)
    fruitName = string.lower(fruitName)
    for rarity, fruits in pairs(Rarities) do
        for _, v in ipairs(fruits) do
            if string.find(fruitName, string.lower(v)) then
                return rarity
            end
        end
    end
    return "Unknown"
end

-- ======= Tween =======
local function TweenToFruit(fruit)
    if fruit and fruit:IsDescendantOf(workspace) and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = Player.Character.HumanoidRootPart
        local distance = (hrp.Position - fruit.Position).Magnitude
        local speed = 100
        local tweenTime = math.clamp(distance / speed, 0.1, 5)
        local tween = TweenService:Create(hrp, TweenInfo.new(tweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CFrame = fruit.CFrame + Vector3.new(0,5,0)})
        tween:Play()
        tween.Completed:Wait()
    end
end

-- ======= Webhook =======
local function SendWebhookEmbed(url, fruitName, eventType)
    if url == "" then return end
    pcall(function()
        local rarity = GetRarity(fruitName)
        local mention = ""

        if rarity == "Legendary" or rarity == "Mythical" then
            mention = "<@1162529172460154942>"
        end

        local data = {
            content = mention,
            embeds = {{
                title = "‚ö° Slayer Hub Notification",
                description = "**"..eventType.."**",
                color = 0x9b59b6,
                fields = {
                    {name = "üë§ Username", value = Player.Name, inline = true},
                    {name = "üçè Fruit", value = "```"..fruitName.."```", inline = true},
                    {name = "‚≠ê Rarity", value = rarity, inline = true},
                    {name = "‚è∞ Time", value = os.date("%Y-%m-%d %H:%M:%S"), inline = true},
                    {name = "üåç PlaceId", value = tostring(game.PlaceId), inline = true}
                },
                thumbnail = {url = "https://cdn.discordapp.com/attachments/1345800682330132540/1414000702786899988/IMG_20250906_183313.jpg?ex=68bea306&is=68bd5186&hm=1eb6fd5c67d9e50ed36298193021476c8934c9f29eb56be907dfa032b82c8983&"},
                footer = {text = "Slayer Hub ‚Ä¢ Hoje √†s " .. os.date("%H:%M")}
            }}
        }

        local req = syn and syn.request or http_request or request
        req({
            Url = url,
            Method = "POST",
            Headers = {["Content-Type"]="application/json"},
            Body = HttpService:JSONEncode(data)
        })
    end)
end

-- ======= AutoStore =======
local function AutoStore()
    pcall(function()
        local plrBag = Player.Backpack
        local plrChar = Player.Character
        for _, Fruit in pairs(plrChar:GetChildren()) do
            if Fruit:IsA("Tool") and Fruit:FindFirstChild("Fruit") then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", Fruit.Name, Fruit)
                if Config.WebhookStoreEnabled then
                    SendWebhookEmbed(Config.WebhookStoreURL, Fruit.Name, "üçá Fruta Armazenada!")
                end
            end
        end
        for _, Fruit in pairs(plrBag:GetChildren()) do
            if Fruit:IsA("Tool") and Fruit:FindFirstChild("Fruit") then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", Fruit.Name, Fruit)
                if Config.WebhookStoreEnabled then
                    SendWebhookEmbed(Config.WebhookStoreURL, Fruit.Name, "üçá Fruta Armazenada!")
                end
            end
        end
    end)
end

-- ======= ServerHop =======
local function ServerHop()
    local servers = {}
    local req = syn and syn.request or http_request or request
    local response = req({Url=string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", game.PlaceId)})
    local data = HttpService:JSONDecode(response.Body)
    for _, v in pairs(data.data) do
        if v.playing < v.maxPlayers then
            table.insert(servers, v.id)
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1,#servers)], Player)
    end
end

-- ======= Loop Principal =======
task.spawn(function()
    local trackedFruits = {}
    while task.wait(1) do
        if Config.AutoFarmFruit then
            local fruitsFound = false
            pcall(function()
                for _, obj in pairs(workspace:GetChildren()) do
                    if obj:IsA("Tool") and obj:FindFirstChild("Handle") and string.find(obj.Name,"Fruit") then
                        fruitsFound = true
                        if Config.WebhookSpawnEnabled and not trackedFruits[obj] then
                            SendWebhookEmbed(Config.WebhookSpawnURL, obj.Name, "üçâ Fruta Spawnou!")
                            trackedFruits[obj] = true
                        end
                        TweenToFruit(obj.Handle)
                        task.wait(0.5)
                        firetouchinterest(Player.Character.HumanoidRootPart,obj.Handle,0)
                        firetouchinterest(Player.Character.HumanoidRootPart,obj.Handle,1)
                        task.wait(1)
                        if Config.AutoStoreFruits then AutoStore() end
                    end
                end
            end)
            if not fruitsFound then
                ServerHop()
            end
        end
    end
end)

-- ======= UI =======
local Window = Fluent:CreateWindow({
    Title = "Slayer Hub",
    SubTitle = "By FJN",
    TabWidth = 100,
    Size = UDim2.fromOffset(600, 400),
    Acrylic = true,
    Theme = "Amethyst"
})

local FarmTab = Window:AddTab({ Title = "Farm Frutas", Icon = "apple" })
local WebhookTab = Window:AddTab({ Title = "Webhooks", Icon = "link" })

FarmTab:AddToggle("AutoFarm", {
    Title = "Auto Farm Fruits",
    Default = Config.AutoFarmFruit,
    Callback = function(value)
        Config.AutoFarmFruit = value
        SaveConfig()
    end
})

FarmTab:AddToggle("AutoStore", {
    Title = "Auto Store Fruits",
    Default = Config.AutoStoreFruits,
    Callback = function(value)
        Config.AutoStoreFruits = value
        SaveConfig()
    end
})

WebhookTab:AddToggle("WebhookSpawn", {
    Title = "Ativar Webhook Spawn",
    Default = Config.WebhookSpawnEnabled,
    Callback = function(value)
        Config.WebhookSpawnEnabled = value
        SaveConfig()
    end
})

WebhookTab:AddInput("WebhookSpawnURL", {
    Title = "URL Webhook Spawn",
    Default = Config.WebhookSpawnURL,
    Placeholder = "cole aqui a URL",
    Callback = function(text)
        Config.WebhookSpawnURL = text
        SaveConfig()
    end
})

WebhookTab:AddToggle("WebhookStore", {
    Title = "Ativar Webhook Armazenar",
    Default = Config.WebhookStoreEnabled,
    Callback = function(value)
        Config.WebhookStoreEnabled = value
        SaveConfig()
    end
})

WebhookTab:AddInput("WebhookStoreURL", {
    Title = "URL Webhook Armazenar",
    Default = Config.WebhookStoreURL,
    Placeholder = "cole aqui a URL",
    Callback = function(text)
        Config.WebhookStoreURL = text
        SaveConfig()
    end
})

-- ======= √çcone =======
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.02, 0, 0.07, 0)
ImageButton.Size = UDim2.new(0, 45, 0, 45)
ImageButton.Image = "rbxassetid://91062721750487"

UICorner.Parent = ImageButton

ImageButton.MouseButton1Down:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.LeftControl, false, game)
end)
